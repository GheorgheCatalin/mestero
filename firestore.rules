rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Listings - anyone can read, only authenticated users can create/update their own
    match /listings/{listingId} {
      allow read: if true; // Public read access for browsing
      allow create: if request.auth != null 
        && request.auth.uid == resource.data.providerId;
      allow update, delete: if request.auth != null 
        && request.auth.uid == resource.data.providerId;
    }
    
    // Booking requests - users can read/write their own bookings (as client or provider)
    match /booking_requests/{bookingId} {
      allow read: if request.auth != null && (
        request.auth.uid == resource.data.clientId || 
        request.auth.uid == resource.data.providerId
      );
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.clientId;
      allow update: if request.auth != null && (
        request.auth.uid == resource.data.clientId || 
        request.auth.uid == resource.data.providerId
      );
      allow delete: if request.auth != null && (
        request.auth.uid == resource.data.clientId || 
        request.auth.uid == resource.data.providerId
      );
    }
    
    // Reviews - users can read all reviews, write reviews for their own bookings
    match /reviews/{reviewId} {
      allow read: if true; // Public read for displaying reviews
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.clientId;
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.clientId;
    }
    
    // Default deny for any other documents
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 